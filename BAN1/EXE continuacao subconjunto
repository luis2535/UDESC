1 - SELEC nome, cpf FROM medicos m WHERE NOT EXISTS (SELECT * FROM pacientes p WHERE NOT EXISTS(SELECT * FROM consultas c WHERE c.codp = p.codp AND c.codm = m.codm))

2 - SELECT Nome, cpf FROM medicos M WHERE especialidade = 'ortopedia' AND NOT EXISTS(SELECT * FROM Pacientes p WHERE cidade = 'Florianopolis' AND NOT EXISTS(SELECT * FROM consultas c WHERE c.codp = p.codp AND c.codm = m.codm))

3 -  SELECT c.* from consultas c NATURAL JOIN (SELECT codm FROM medicos WHERE nome='Maria') as m

4 - SELECT * FROM funcionarios ORDER BY salario desc, idade asc LIMIT 3

5 - SELECT m.nome, p.nome FROM medicos m NATURAL JOIN consulta c JOIN pacientes p ON p.codp = c.codp ORDER BY data, hora LIMIT 3 OFFSET 2;

---->Retorne o funcionario que recebe o maior salÃ¡rio

SELECT * FROM funcionarios ORDER BY salario desc LIMIT 1;

6 - SELECT idade, count(*) FROM medicos GROUP BY idade;

7 - SELECT andar FROM ambulatorios GROUP BY andar HAVING AVG (capacidade) >= 40;

8 - SELECT nome, count(*) FROM medicos m NATURAL JOIN consultas c GROUP BY nome HAVING count(*) > 1;

9 - UPDATE consultas SET data = '2006-11-21' WHERE hora < '12:00:00' AND codm IN(SELECT codm FROM medicos WHERE nome = 'Pedro');

10 - INSERT INTO medicos (codm, nome, idade, cpf, cidade, especialidade, nroa) SELECT * FROM (SELECT MAX(codm + 1) FROM medicos) m, (SELECT nome, idade, cpf, cidade FROM funcionarios WHERE codf = 3) f, (SELECT especialidade, nroa FROM medicos WHERE codm = 2) m2;
